Titre : Fouille de multigraphes pour l'analyse de traces d’exécution

Contexte : Ce stage est financé dans le cadre d’une collaboration entre la société BERGER-LEVRAUT et le LIRMM.
Dans les métiers fortement adossés à des réglementations, de nombreux processus et services soumis sont désormais informatisés (comptabilité, marchés publics, parcours de santé, procédures douanières, déclarations d’impôts, procédures de vote, documents d’identité, etc.), particulièrement dans les métiers du service public et bien souvent à destination des citoyens. La complexité des réglementations et leur évolution continue rendent néanmoins difficiles la conception et surtout la maintenance des logiciels qui mettent en œuvre ces services. Il peut donc arriver qu’à un instant donné, un logiciel ne soit pas une image exacte de la procédure réglementaire qu’il devrait implémenter. Ces écarts sont d’autant plus difficiles à détecter que les logiciels résultent d’une suite de raffinages (spécifications fonctionnelles, techniques) basés sur la réglementation et la connaissance métier d’experts qui n’ont pas de représentation formelle. Ces logiciels peuvent alors donner lieu à des comportements déviants de la réglementation, soit par des utilisateurs bien intentionnés mais maladroits soit par des utilisateurs malveillants. 

Objectifs : L'objectif de ce stage est d'analyser dynamiquement et sémantiquement de grands volumes de traces d'exécution pour déterminer des comportements déviants. 

Méthodologie attendue :

Un multigraphe est un graphe composé d’arêtes de différents types. Par exemple, deux sommets représentant des classes A et B d’un logiciel peuvent être reliés par une arête signifiant l’appel d’une fonction de B par une fonction de A à un moment t, et d’une arête symbolisant l’inclusion de la classe B dans la classe A.  Le stagiaire de M2 étudiera différentes approches liés aux multigraphes :

1.  Modélisation des données sous forme de multigraphes. Cette approche permettra de rendre compte, de manière fine, les interactions qui existent entre des objets de natures diverses issus des traces (actions utilisateurs, fonctions logicielles appelées, etc.). Un multigraphe sera créé à chaque pas de temps. 
2.  Appariement de multigraphes. Cette étape permettra de définir des degrés de similarité entre différents multigraphes. Les multigraphes identiques ou proches seront regroupés en classes de valeurs (appelées items pour la suite). 
3.  Extraction de séquences fréquentes d’items. Des séquences partiellement ordonnées d’items fréquents (i.e. classes d’hypergraphes ayant des évolutions similaires) seront ensuite extraites grâce à des outils de fouille.
4.  Visualisation. Un outil de visualisation sera enfin proposé pour restituer les motifs ainsi extraits.

La difficulté sera ici de définir des objets et des arcs qui soient pertinents pour l'analyse des traces. 
De manière générale, l'évolution de multigraphes a fait l’objet de peu de travaux de recherche. D’autre part, l'utilisation d'extraction de motifs (par exemple des motifs séquentiels, des motifs spatio-temporels, etc.) a montré depuis de nombreuses années son efficacité dans l’étude d’objets évoluant au cours du temps. Une étude bibliographique de ce type de techniques sera donc attendue en début de stage.

Missions : L'étudiant de M2 devra réaliser un certain nombre d'actions :  
-     réaliser un état de l'art sur les différentes méthodes évoquées précédemment
-     proposer différentes mesures adaptées au contexte des multigraphes et au contexte de l'analyse des traces
-     prendre en compte ces mesures pour adapter les multigraphes à la problématique de l'extraction de motifs
-     appliquer les méthodes d’extraction des motifs
-     mettre en place une visualisation de ces motifs
-     expérimenter les propositions sur des jeux de données réelles

Compétences attendues : Le candidat devra avoir une bonne connaissance des méthodes de fouille de données. Dans l’idéal, il aura  déjà manipulé l'outil Weka ou R. Des connaissances en visualisations seraient un plus.

Encadrements : 
- Sandra Bringay bringay@lirmm.fr
- Deruelle Laurent Laurent.DERUELLE@berger-levrault.fr
- Pascal Poncelet poncelet@lirmm.fr
- Dino Ienco dino.ienco@teledetection.fr
- Arnaud Sallaberry arnaud.sallaberry@lirmm.fr

Contacts :
Sandra Bringay bringay@lirmm.fr 
Pascal Poncelet pascal.poncelet@lirmm.fr
 

Bibliographie
Akihiro Inokuchi, Takashi Washio: Mining Frequent Graph Sequence Patterns Induced by Vertices. SDM 2010: 466-477
Mickaël Fabrègue, Agnès Braud, Sandra Bringay, Florence Le Ber, Maguelonne Teisseire: Mining closed partially ordered patterns, a new optimized algorithm. Knowl.-Based Syst. (KBS) 79:68-79 (2015)
Stef van den Elzen, Jarke J. van Wijk. Multivariate Network Exploration and Presentation: From Detail to Overview via Selections and Aggregations. IEEE Transactions on Visualization Computer Graphics 20(12): 2310-2319, 2014.
Stef van den Elzen, Danny Holten, Jorik Blaas, Jarke J. van Wijk. Dynamic Network Visualization withExtended Massive Sequence Views. IEEE Transactions on Visualization Computer Graphics 20(8): 1087-1099, 2014.


 
